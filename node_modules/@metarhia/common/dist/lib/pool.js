'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var storage = Symbol('storage');

var Pool = /*#__PURE__*/function () {
  function Pool() {
    var factory = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    _classCallCheck(this, Pool);

    this.factory = factory;
    this[storage] = [];
  }

  _createClass(Pool, [{
    key: "put",
    value: function put(value) {
      this[storage].push(value);
    }
  }, {
    key: "get",
    value: function get() {
      if (this[storage].length === 0) {
        return typeof this.factory === 'function' ? this.factory() : null;
      }

      return this[storage].pop();
    }
  }]);

  return Pool;
}();

module.exports = {
  Pool: Pool
};